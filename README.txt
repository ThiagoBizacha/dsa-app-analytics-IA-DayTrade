# M√≥dulo Especial de Consultoria na √Årea de Dados com Agentes de IA
# Projeto Pr√°tico Para Consultoria na √Årea de Dados com Agentes de IA
# Deploy de App Para Day Trade Analytics em Tempo Real com Agentes de IA, Groq, DeepSeek e AWS Para Monetiza√ß√£o


##### Execu√ß√£o Local #####

# Instale o Anaconda Python no seu computador. Links de download para instala√ß√£o:

https://repo.anaconda.com/archive/Anaconda3-2024.10-1-Windows-x86_64.exe (Windows)
https://repo.anaconda.com/archive/Anaconda3-2024.10-1-MacOSX-arm64.pkg   (MacOS Apple Silicon)
https://repo.anaconda.com/archive/Anaconda3-2024.10-1-MacOSX-x86_64.pkg  (MacOS Intel)
https://repo.anaconda.com/archive/Anaconda3-2024.10-1-Linux-x86_64.sh    (Qualquer Distribui√ß√£o Linux)

# Abra o terminal ou prompt de comando, navegue at√© a pasta com os arquivos e execute o comando abaixo para criar um ambiente virtual:

conda create --name dsadeployai python=3.12

# Ative o ambiente:

conda activate dsadeployai (ou: source activate dsadeployai)

# Instale o pip e as depend√™ncias:

conda install pip
pip install -r requirements.txt 

# Execute o comando abaixo e acesse a app pelo navegador.

streamlit run dsa_app.py

# Use os comandos abaixo para desativar o ambiente virtual e remover o ambiente (opcional):

conda deactivate
conda remove --name dsadeployai --all


##### Execu√ß√£o na AWS #####

# Crie sua conta gratuita na AWS.

# Crie uma inst√¢ncia EC2 da camada gratuita AWS.

# Acesse a inst√¢ncia pelo terminal conforme mostrado nas aulas.

# Fa√ßa o download do Miniconda (Anaconda √© muito pesado para a inst√¢ncia EC2 gratuita) com o comando abaixo:

wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh

# Crie a pasta app e copie os arquivos como mostrado nas aulas.

# Execute o comando abaixo:

pip install -r requirements.txt 

# Inicie a app com um dos comandos abaixo:

streamlit run dsa_app.py
nohup streamlit run dsa_app.py --server.port=8501 --server.address=0.0.0.0 &

# Acesse a app pelo navegador.

# Resolva problemas de acesso como mostrado nas aulas.

# Inicie a monetiza√ß√£o da app com seus clientes.

# Nota: Quando terminar seus testes, desligue a inst√¢ncia EC2 conforme mostrado nas aulas.


-------------------------------------------------------------------------------------------------------------------

README - Plataforma de An√°lise em Tempo Real com Agentes de IA
Este projeto implementa uma plataforma anal√≠tica em tempo real voltada para opera√ß√µes de day trade. A solu√ß√£o utiliza agentes de Intelig√™ncia Artificial integrados a tecnologias como Groq, DeepSeek e AWS para analisar cota√ß√µes de ativos, not√≠cias do mercado e gerar recomenda√ß√µes automatizadas de compra e venda. A proposta visa aumentar a velocidade, precis√£o e rentabilidade nas decis√µes de investidores, al√©m de permitir monetiza√ß√£o via assinaturas e servi√ßos premium.

üìò Objetivo do Projeto
- Automatizar a leitura e interpreta√ß√£o de not√≠cias financeiras.
- Monitorar cota√ß√µes de ativos em tempo real.
- Gerar alertas e recomenda√ß√µes com base em IA.
- Disponibilizar a solu√ß√£o em nuvem com escalabilidade e confiabilidade.
- Servir como base para consultorias de dados com foco em agentes inteligentes.

‚öôÔ∏è Tecnologias Utilizadas
- Python 3.10+
- Bibliotecas: pandas, numpy, scikit-learn, requests, dotenv
- APIs de IA: Groq, DeepSeek
- Infraestrutura: AWS (S3, Lambda, etc.)
- Ambiente virtual com venv
- GitHub para versionamento

üìÇ Estrutura do Projeto
dsa_app.py            # Script principal da aplica√ß√£o
agents/               # Agentes de IA e an√°lise
data/                 # Dados brutos e processados
utils/                # Fun√ß√µes auxiliares (API, parser, etc.)
requirements.txt      # Lista de depend√™ncias
.env                  # Vari√°veis de ambiente (n√£o versionar)
.gitignore            # Exclus√µes do Git
README.md             # Documenta√ß√£o do projeto
venv/                 # Ambiente virtual (n√£o subir para o Git)

üöÄ Como Executar o Projeto Localmente

1. Clone o reposit√≥rio
git clone https://github.com/seu-usuario/seu-repo.git
cd seu-repo

2. Crie e ative o ambiente virtual
python -m venv venv

# Windows
venv\Scripts\activate

# Linux/macOS
source venv/bin/activate

3. Instale as depend√™ncias
pip install -r requirements.txt

4. Execute o script principal
python dsa_app.py

üîê Vari√°veis de Ambiente
Crie um arquivo .env no diret√≥rio raiz com o seguinte conte√∫do:

GROQ_API_KEY=xxxxx
DEEPSEEK_TOKEN=xxxxx
AWS_ACCESS_KEY_ID=xxxxx
AWS_SECRET_ACCESS_KEY=xxxxx

‚ö†Ô∏è O arquivo .env est√° listado no .gitignore e n√£o deve ser versionado para seguran√ßa.

üìà Expans√µes Futuras
- Integra√ß√£o com painel web de visualiza√ß√£o dos dados e alertas
- Armazenamento hist√≥rico em banco de dados (SQL/NoSQL)
- Rotinas automatizadas via AWS Lambda
- Integra√ß√£o com Telegram ou WhatsApp para alertas em tempo real
- Implementa√ß√£o de testes automatizados

üë®‚Äçüíª Autor
Thiago  
Lideran√ßa em Transforma√ß√£o Digital | Ci√™ncia de Dados | Agentes de IA  
Contato profissional: [seu e-mail ou GitHub]





